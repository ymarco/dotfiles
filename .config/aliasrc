#!/bin/sh
alias \
	ka="nocorrect killall" \
	ls="ls -hN --group-directories-first --color=auto" \
	diff="diff --color=auto" \
	config="/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME" \
	vim="nvim" \
	v="nvim" \
	ec="setsid emacsclient" \
	sv="sk | xargs emacsclient -t -a \"\"" \
	ce="edit-config" \
	grep="grep --color=auto" \
	rand-bg="feh --randomize --bg-fill ~/.wallpapers/*" \
	idea="_JAVA_AWT_WM_NONREPARENTING=1 idea &" \
	n="nnn" \
	python="python3" \
	f="xdg-open" \
	sai="sudo apt install" \
	s="sudo" \
	doom="$HOME/.config/emacs/bin/doom"\
	rn="react-native"\
	xclip="xclip -sel clip"\
	ns="nix-shell"\
	hm="home-manager"\
	cp="cp -r --reflink=auto"\
	guix="SSL_CERT_FILE=$HOME/.guix-profile/etc/ssl/certs/ca-certificates.crt guix"



# SHORTCUTS
alias \
	y="cd ~/yoav/" \
	u="cd ~/yoav/uni/" \
	s="cd ~/yoav/school/" \
	d="cd ~/Desktop/" \
	t="cd ~/to-be-sorted/" \
	T="cd ~/to-be-sorted/Torrents/" \

# FUNCTIONS

# search in bash history, copy selected to clipboard
hs() {
	sort -ubi "$HISTFILE" | sk | xargs -r -I % printf "%" | xclip -selection clipboard
}

# get preformance info about processes, how much of my resources they used since
# startup
pinfo() {
	ps axch -o cmd,%cpu,%mem | sk --header "PROCESS                      CPU  MEM" >/dev/null
}

# Sum statistics about me flacs
musicinfo() {
	soxi -D **/*.{flac,mp3} |
		awk '{a+=$0; tot+=1} END {print tot " songs, " a/(60*60) " hours of playback, average song length is " a/tot/60 " mins."}'
	echo "summing $(du -sh .)"
}

# Print only the important bit from xev, i.e key code number & name.
xevkeyinfo() {
	# From ArchWiki
	# https://wiki.archlinux.org/index.php/Keyboard_input#Identifying_keycodes_in_Xorg
	xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf "%-3s %s\n", $5, $8 }'
}
mrm() {
    N="$@"
    printf "remove %s?[y/n] " "$(fd -t f $N)"
    read ans
    [ $ans = "y" ] && fd -t f $N -x rm '{}'
}


lfcd () {
    # from https://github.com/gokcehan/lf/wiki/Integrations#archivemount
    tmp="$(mktemp)"
    fid="$(mktemp)"
    lf -command '$printf $id > '"$fid"'' -last-dir-path="$tmp" "$@"
    id="$(cat "$fid")"
    archivemount_dir="/tmp/__lf_archivemount_$id"
    if [ -f "$archivemount_dir" ]; then
        cat "$archivemount_dir" | \
            while read -r line; do
                fusermount -u "$line"
                rmdir "$line"
            done
        rm -f "$archivemount_dir"
    fi
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        if [ -d "$dir" ]; then
            if [ "$dir" != "$(pwd)" ]; then
                cd "$dir"
            fi
        fi
    fi
}
# TODO bind lf to a key
alias lf=lfcd \
    a=lf
