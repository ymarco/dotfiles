# -*- mode: conf -*-

# Basic vars
set shell sh
set previewer ~/.config/lf/scope
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set color256
set icons		# Enable icons. Requires nerd fonts and LF_ICONS variable.


# Custom Functions

# cmd open ${{
	# case $(file --mime-type "$f" -bL) in
		# text/*|application/json) $EDITOR "$f";;
		# video/|image/|application/pdf) setsid xdg-open "$f" & disown;;
		# *) xdg-open "$f" ;;
	# esac
# }}

cmd xcopy ${{
	xclip -selection clipboard -t "$(file --mime-type -b $f)" -i "$f"
}}
map Y xcopy

cmd drag ${{
	dragon -x "$f"
}}


# cmds/functions
# cmd open ${{
# 	case $(file --mime-type "$f" -b) in
# 	text/troff) man ./ "$f";;
# 	text/html) setsid $BROWSER "$f";;
# 	text/*) emacsclient $fx;;
# 	image/x-xcf|image/svg+xml) setsid gimp "$f" >/dev/null 2>&1 & ;;
# 	image/*) rotdir "$f" | setsid sxiv -aio 2>/dev/null | lf-select & ;;
# 	audio/*) mpv "$f" ;;
# 	video/*) setsid mpv "$f" -quiet >/dev/null 2>&1 & ;;
# 	application/pdf) setsid $VIEWER $fx >/dev/null 2>&1 & ;;
# 		*) for f in $fx; do setsid $OPENER "$f" >/dev/null 2>&1 & done;;
# 	esac
# }}

cmd rename %[ -e $1 ] && printf "file exists" || mv "$f" $1

cmd delete ${{
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

map D delete

cmd mkdir ${{
	set -f
	printf "mkdir: "
	read ans
	[ -n "$ans" ] && mkdir -p "$ans"
}}

cmd moveto ${{
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/directories | fzf)" &&
	eval mv -iv $fx $dest &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

map M moveto

cmd copyto ${{
	set -f
	clear; echo "Copy to where?"
	dest="$(cut -d'	' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/directories | fzf)" &&
	eval cp -ivr $fx $dest &&
	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

map C copyto

# cmd bulkrename ${{
# 	vidir
# }}

# Bindings
map <c-f> $lf -remote "send $id select '$(fzf)'"
map J $lf -remote "send $id cd $(cut -d'	' -f2 ${XDG_CONFIG_HOME:-$HOME/.config}/directories | fzf)"
map gh
map g top
map a push %mkdir<space>
map r push :rename<space>
map R $lf -remote "send $id push :rename<space>$f"
# map b bulkrename
map <c-r> reload
map <enter> shell
map x $$f
map X !$f
map o &mimeopen "$f"
map O $mimeopen --ask "$f"
# FIXME
# map = mkdir
