#!/bin/bash
# adapted from https://tex.stackexchange.com/a/199150/
#
# optpdf file.pdf
#   This script will attempt to optimize the given pdf

for file in "$@"; do
    if [ ! -f "$file" ]; then
        echo Error: No such file "$file";
        exit 1
    fi
    printf "$file... "
    filebase=$(basename "$file" .pdf)
    optfile="/tmp/$$-${filebase}_opt.pdf"
    gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dNOPAUSE -dQUIET -dBATCH -dPrinted=false\
        -sOutputFile="${optfile}" "${file}"

    if [ $? == '0' ]; then
        optsize=$(stat -c "%s" "${optfile}")
        orgsize=$(stat -c "%s" "${file}")
        if [ "${optsize}" -eq 0 ]; then
            echo "No output!  Keeping original"
            rm -f "${optfile}"
            continue;
        fi
        if [ ${optsize} -ge ${orgsize} ]; then
            echo "Didn't make it smaller! Keeping original"
            rm -f "${optfile}"
            continue;
        fi
        bytesSaved=$(expr $orgsize - $optsize)
        sizeSaved=$(numfmt --to iec --format "%.1f" $bytesSaved)
        percent=$(expr $optsize '*' 100 / $orgsize)
        echo Saved $sizeSaved \(now ${percent}% of old\)
        rm "${file}"
        mv "${optfile}" "${file}"
    fi
done
